//favorite.php

<?php
    session_start();

    if (!isset($_SESSION['login'])) {

        header("Location: login.php");
        die();
    }
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Favorite</title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" 
    integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">

</head>
<body>
    <div class="container-fluid row m-0 p-0">
        <?php require 'navbar.html';?>
        <div class="col-md-10">
            <div class="row d-flex col-m-12 bg-white border rounded-bottom shadow p-4 mb-4">
            </div>
            <div class="col-md-12 d-flex flex-wrap justify-content-center mb-5 p-0" id="root"></div>
        </div>
    </div>

    <script src="scripts/favorite.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" i
    ntegrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" 
    integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
</body>
</html>
*****************************************************

//favorite.js

$(document).ready(function() {

        $.ajax({
            type: 'GET',
            url: '../api/product/read_favorite.php',
            dataType: 'JSON',
            cache: false,
            beforeSend: function() {
                $('#root').val("Loading..");
            },
            success: function (result){

                let products = "";
                let id, type, price, image;
                let len = result.length;
                console.log(result);
                for (let i = 0; i < len; i++) {
                    id = result[i].id;
                    type = result[i].type;
                    price = result[i].price;
                    image = result[i].image;
                    
                    products += `<div class="card col-6 col-sm-4 col-md-3 col-lg-2 p-0 mx-1 mt-1 shadow">
                                    <img src=" + '${image}' + " class="card-img-top" alt="Product image">
                                    <div class="card-body">
                                        <h5 class="card-title">${price}₪</h5>
                                        <a href="#" class="btn btn-primary">Go somewhere</a>
                                    </div>
                                </div>`;
                    }

                $('#root').html(products);
            }
        });
    });    

********************************************************
//index.php

$(document).ready(function (){

    // AJAX function
    function xhr1(xfunction, url) {
        $.ajax({
            type: 'GET',
            url: url,
            dataType: 'JSON',
            success: function (result)  {
                xfunction(result);
            }
        });
    }

    // AJAX function
    function xhr2(xfunction, url, data) {
        $.ajax({
            type: 'POST',
            data: data,
            url: url,
            cache: false,
            dataType: 'JSON',
            success: function (result) {
                xfunction(result);
            }
        });
    }

    // Display all products request
    function display(result) {

        let products = "";
        let id, type, price, image;
        let len = result['data'].length;
        
        for (let i = 0; i < len; i++) {
            id = result['data'][i].id;
            type = result['data'][i].type;
            price = result['data'][i].price;
            image = result['data'][i].image;
            
            products += `<div class="card col-6 col-sm-4 col-md-3 col-lg-2 p-0 mx-1 mt-1 shadow">
                            <img src=" + '${image}' + " class="card-img-top" alt="Product image">
                            <div class="card-body">
                                <h5 class="card-title">${price}₪</h5>
                                <a href="#" class="btn btn-primary">Go somewhere</a>
                            </div>
                        </div>`;
            }

        $('#root').html(products);
    }

    xhr1(display, '../api/product/read.php');

    $('#type_filter').on('change', function() {
        let type = $(this).val();
        let data = {type: type};

        function check_type(result) {

            let products = "";
            let id, type, price, image;
            let len = result['data'].length;

            for (let i = 0; i < len; i++) {
                id = result['data'][i].id;
                type = result['data'][i].type;
                price = result['data'][i].price;
                image = result['data'][i].image;
                
                products += `<div class="card col-6 col-sm-4 col-md-3 col-lg-2 p-0 mx-1 mt-1 shadow">
                                <img src=" + '${image}' + " class="card-img-top" alt="Product image">
                                <div class="card-body">
                                    <h5 class="card-title">${price}₪</h5>
                                    <a href="#" class="btn btn-primary">Go somewhere</a>
                                </div>
                            </div>`;
                }
    
            $('#root').html(products);
        }

        if (type == "none") {
            xhr1(display, '../api/product/read.php');
        } else {
            xhr2(check_type, '../api/product/read_type.php', data)
        }
    });
});
***************************************
//navbar.html

<div class="col-md-2" style="max-height: 400px">
    <nav class="navbar bg-secondary navbar-dark rounded-bottom navbar-expand-lg shadow mh-100">
        <button class="navbar-toggler" type="button" data-toggle="collapse" 
            data-target="#navbarToggler" aria-controls="navbarToggler" 
            aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarToggler">
            <ul class="navbar-nav d-flex flex-column">
                <li class="nav-item">
                    <a class="nav-link" href="index.php">Products</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="favorite.php">Favorites</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Add product</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Basket</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Purchases</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-white" href="logout.php">Log out</a>
                </li>
            </ul>
        </div>
    </nav>
    </div>

*********************************
//read.favorite

<?php
    class Product {

        private $conn;
        private $table = "products";

        public $id;
        public $type;
        public $price;
        public $image;

        public function __construct($db) {

            $this->conn = $db;
        }

        public function read() {

            $query = 'SELECT * FROM ' . $this->table . ' ORDER BY added_date DESC';

            $stmt = $this->conn->prepare($query);
            $stmt->execute();

            return $stmt;
        }

        public function read_single() {

            $query = 'SELECT * FROM ' . $this->table . ' WHERE id = ' . $this->id . ' LIMIT 1';

            $stmt = $this->conn->prepare($query);
            $stmt->execute();

            $row = $stmt->fetch(PDO::FETCH_ASSOC);

            $this->id = $row['id'];
            $this->type = $row['type'];
            $this->price = $row['price'];
            $this->image = $row['image'];
        }

        public function read_type() {

            $query = 'SELECT * FROM ' . $this->table . ' WHERE type = :type ORDER BY added_date DESC';

            $stmt = $this->conn->prepare($query);
            $this->type = htmlspecialchars(strip_tags($this->type));
            $stmt->execute(['type' => $this->type]);
            
            return $stmt;
        }

        public function read_favorite() {
            
            $query = 'SELECT * FROM ' . $this->table . ' AS p, classification AS c WHERE p.id = c.id AND favorite = 1 ORDER BY added_date DESC';

            $stmt = $this->conn->prepare($query);
            $stmt->execute();

            return $stmt;
        }

        public function read_basket() {

            $query = 'SELECT * FROM ' . $this->table . ' JOIN classification ON id WHERE basket = 1 ORDER BY added_date DESC';

            $stmt = $this->conn->prepare($query);
            $stmt->execute();

            return $stmt;
        }

        public function read_purchases() {

            $query = 'SELECT * FROM ' . $this->table . ' JOIN classification ON id WHERE purchased = 1 ORDER BY added_date DESC';

            $stmt = $this->conn->prepare($query);
            $stmt->execute();

            return $stmt;
        }

        public function create() {

            $query = 'INSERT INTO ' . $this->table . '(type, price, added_date, image)
            VALUES (:type, :price, NOW(), :image)';

            $stmt = $this->conn->prepare($query);

            $this->type = htmlspecialchars(strip_tags($this->type));
            $this->price = htmlspecialchars(strip_tags($this->price));
            $this->image = htmlspecialchars(strip_tags($this->image));

            $stmt->bindParam(':type', $this->type);
            $stmt->bindParam(':price', $this->price);
            $stmt->bindParam(':image', $this->image);

            if ($stmt->execute()) {

                return true;
            } else {

                printf('Error: %s.\n', $stmt->error);
                return false;
            }
        }

        public function update() {

            $query = 'UPDATE`' . $this->table . 
            '`SET `type` = :type, `price` = :price, `image` = :image WHERE `id` = :id';
            
            $stmt = $this->conn->prepare($query);

            $this->type = htmlspecialchars(strip_tags($this->type));
            $this->price = htmlspecialchars(strip_tags($this->price));
            $this->image = htmlspecialchars(strip_tags($this->image));
            $this->id = htmlspecialchars(strip_tags($this->id));

            $stmt->bindParam(':type', $this->type);
            $stmt->bindParam(':price', $this->price);
            $stmt->bindParam(':image', $this->image);
            $stmt->bindParam(':id', $this->id);

            if ($stmt->execute()) {

                return true;
            } else {

                printf('Error: %s.\n', $stmt->error);
                return false;
            }
        }

        public function delete() {

            $query = 'DELETE FROM ' . $this->table . ' WHERE id = :id';

            $stmt = $this->conn->prepare($query);
            $this->id = htmlspecialchars(strip_tags($this->id));
            $stmt->bindParam(':id', $this->id);

            if ($stmt->execute()) {

                return true;
            } else {

                printf("Error: %s.\n". $stmt->error);
                return false;
            }
        }
    }

?>

*******************************************
// model read_favorite

 public function read_favorite() {
            
            $query = 'SELECT * FROM ' . $this->table . ' AS p, classification AS c WHERE p.id = c.id AND favorite = 1 ORDER BY added_date DESC';

            $stmt = $this->conn->prepare($query);
            $stmt->execute();

            return $stmt;
        }